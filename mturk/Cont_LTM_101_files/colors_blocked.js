let colors = [
	[253,70,130],
	[254,70,129],
	[254,70,127],
	[254,70,126],
	[254,70,124],
	[254,70,123],
	[255,70,121],
	[255,70,120],
	[255,70,118],
	[255,70,117],
	[255,71,116],
	[255,71,114],
	[255,71,113],
	[255,71,111],
	[255,72,110],
	[255,72,108],
	[255,72,107],
	[255,73,105],
	[255,73,104],
	[254,74,102],
	[254,74,101],
	[254,75,99],
	[254,75,98],
	[254,76,96],
	[253,76,95],
	[253,77,94],
	[253,77,92],
	[252,78,91],
	[252,79,89],
	[252,79,88],
	[251,80,87],
	[251,81,85],
	[250,81,84],
	[250,82,83],
	[249,83,81],
	[249,84,80],
	[248,84,78],
	[248,85,77],
	[247,86,76],
	[246,87,75],
	[246,88,73],
	[245,88,72],
	[245,89,71],
	[244,90,69],
	[243,91,68],
	[242,92,67],
	[242,92,66],
	[241,93,64],
	[240,94,63],
	[239,95,62],
	[239,96,61],
	[238,97,60],
	[237,97,58],
	[236,98,57],
	[235,99,56],
	[234,100,55],
	[234,101,54],
	[233,102,53],
	[232,102,52],
	[231,103,50],
	[230,104,49],
	[229,105,48],
	[228,106,47],
	[227,107,46],
	[226,107,45],
	[225,108,44],
	[224,109,43],
	[223,110,42],
	[222,111,41],
	[221,111,40],
	[220,112,39],
	[218,113,39],
	[217,114,38],
	[216,115,37],
	[215,115,36],
	[214,116,35],
	[213,117,34],
	[212,118,34],
	[211,118,33],
	[209,119,32],
	[208,120,32],
	[207,121,31],
	[206,121,30],
	[205,122,30],
	[203,123,29],
	[202,123,29],
	[201,124,28],
	[200,125,28],
	[198,126,28],
	[197,126,27],
	[196,127,27],
	[195,128,27],
	[193,128,27],
	[192,129,27],
	[191,129,27],
	[190,130,27],
	[188,131,27],
	[187,131,27],
	[186,132,27],
	[184,132,27],
	[183,133,28],
	[182,134,28],
	[180,134,28],
	[179,135,29],
	[178,135,29],
	[176,136,30],
	[175,136,30],
	[174,137,31],
	[172,137,32],
	[171,138,32],
	[170,139,33],
	[168,139,34],
	[167,140,35],
	[166,140,36],
	[164,140,36],
	[163,141,37],
	[162,141,38],
	[160,142,39],
	[159,142,40],
	[158,143,41],
	[156,143,42],
	[155,144,43],
	[153,144,44],
	[152,144,45],
	[151,145,46],
	[149,145,48],
	[148,146,49],
	[147,146,50],
	[145,146,51],
	[144,147,52],
	[143,147,53],
	[141,147,55],
	[140,148,56],
	[138,148,57],
	[137,148,58],
	[136,149,60],
	[134,149,61],
	[133,149,62],
	[132,150,64],
	[130,150,65],
	[129,150,66],
	[127,151,68],
	[126,151,69],
	[125,151,70],
	[123,151,72],
	[122,152,73],
	[121,152,75],
	[119,152,76],
	[118,152,77],
	[116,153,79],
	[115,153,80],
	[114,153,82],
	[112,153,83],
	[111,153,85],
	[109,154,86],
	[108,154,88],
	[107,154,89],
	[105,154,91],
	[104,154,92],
	[102,155,94],
	[101,155,95],
	[100,155,97],
	[98,155,98],
	[97,155,100],
	[95,155,101],
	[94,155,103],
	[93,156,104],
	[91,156,106],
	[90,156,107],
	[88,156,109],
	[87,156,111],
	[85,156,112],
	[84,156,114],
	[83,156,115],
	[81,156,117],
	[80,157,118],
	[78,157,120],
	[77,157,121],
	[75,157,123],
	[74,157,125],
	[73,157,126],
	[71,157,128],
	[70,157,129],
	[68,157,131],
	[67,157,132],
	[65,157,134],
	[64,157,136],
	[62,157,137],
	[61,157,139],
	[59,157,140],
	[58,157,142],
	[57,157,143],
	[55,157,145],
	[54,157,146],
	[52,157,148],
	[51,157,149],
	[50,157,151],
	[48,157,152],
	[47,157,154],
	[46,157,155],
	[45,157,157],
	[44,157,158],
	[42,156,160],
	[41,156,161],
	[40,156,163],
	[39,156,164],
	[39,156,165],
	[38,156,167],
	[37,156,168],
	[37,156,170],
	[36,156,171],
	[36,155,172],
	[35,155,174],
	[35,155,175],
	[35,155,176],
	[35,155,178],
	[36,155,179],
	[36,155,180],
	[36,154,181],
	[37,154,183],
	[38,154,184],
	[39,154,185],
	[40,154,186],
	[41,153,187],
	[42,153,188],
	[43,153,190],
	[44,153,191],
	[46,152,192],
	[47,152,193],
	[49,152,194],
	[50,152,195],
	[52,151,196],
	[54,151,197],
	[56,151,198],
	[57,150,199],
	[59,150,200],
	[61,150,201],
	[63,150,202],
	[65,149,202],
	[67,149,203],
	[69,148,204],
	[71,148,205],
	[73,148,206],
	[75,147,206],
	[77,147,207],
	[79,147,208],
	[81,146,208],
	[83,146,209],
	[85,145,210],
	[87,145,210],
	[89,145,211],
	[92,144,211],
	[94,144,212],
	[96,143,212],
	[98,143,213],
	[100,142,213],
	[102,142,214],
	[104,141,214],
	[106,141,215],
	[109,140,215],
	[111,140,215],
	[113,139,215],
	[115,139,216],
	[117,138,216],
	[119,138,216],
	[121,137,216],
	[124,136,216],
	[126,136,217],
	[128,135,217],
	[130,135,217],
	[132,134,217],
	[134,133,217],
	[136,133,217],
	[138,132,217],
	[140,132,217],
	[142,131,216],
	[144,130,216],
	[146,130,216],
	[149,129,216],
	[151,128,216],
	[153,127,216],
	[155,127,215],
	[157,126,215],
	[159,125,215],
	[161,125,214],
	[162,124,214],
	[164,123,214],
	[166,122,213],
	[168,122,213],
	[170,121,212],
	[172,120,212],
	[174,119,211],
	[176,118,211],
	[178,118,210],
	[180,117,209],
	[181,116,209],
	[183,115,208],
	[185,114,207],
	[187,114,207],
	[188,113,206],
	[190,112,205],
	[192,111,205],
	[194,110,204],
	[195,109,203],
	[197,108,202],
	[199,108,201],
	[200,107,200],
	[202,106,199],
	[203,105,198],
	[205,104,198],
	[206,103,197],
	[208,102,196],
	[209,102,195],
	[211,101,194],
	[212,100,193],
	[214,99,191],
	[215,98,190],
	[217,97,189],
	[218,96,188],
	[219,95,187],
	[221,94,186],
	[222,94,185],
	[223,93,184],
	[225,92,182],
	[226,91,181],
	[227,90,180],
	[228,89,179],
	[229,89,177],
	[230,88,176],
	[232,87,175],
	[233,86,173],
	[234,85,172],
	[235,84,171],
	[236,84,170],
	[237,83,168],
	[238,82,167],
	[239,81,165],
	[239,81,164],
	[240,80,163],
	[241,79,161],
	[242,79,160],
	[243,78,158],
	[244,77,157],
	[244,77,156],
	[245,76,154],
	[246,75,153],
	[247,75,151],
	[247,74,150],
	[248,74,148],
	[248,73,147],
	[249,73,145],
	[249,73,144],
	[250,72,142],
	[251,72,141],
	[251,71,139],
	[251,71,138],
	[252,71,136],
	[252,71,135],
	[253,70,133],
	[253,70,132]
];

	let dx = {
        "repeatimg": counter(101,101+totalRepeats-1),
        "pracimg": counter(101+totalRepeats,101+totalRepeats+numTrialsPerPart[0]-1),
        "r_study": counter(101+totalRepeats+numTrialsPerPart[0],101+totalRepeats+numTrialsPerPart[0]+numTrialsPerPart[1]-1),
				"r_repeattrial": counter(1,numTrialsPerPart[1],2),
				"r_TrialType": repmat([0,0,1,2,3],trialsPerBlock/5),
				"rep_TrialType": repmat([0,0,1,2,3],Math.ceil(totalRepeats/5))
	};

	const tempRand = _.clone(dx.r_TrialType);
	dx.r_TrialType = [];

	for (let blockNum=0; blockNum<totBlocks; blockNum++) {
		fooArray = _.clone(chance1.shuffle(tempRand));
		dx.r_TrialType.push.apply(dx.r_TrialType,chance1.shuffle(fooArray));
	}

	function repmat(array, count) {
	    let result = [];
	    while (count--) {
	        result = result.concat(array);
	    }
	    return result;
	}
	function counter(start, end, interval) {
			if (interval == undefined) { interval = 1; }
			let result = [];
			while (start<=end) {
					result = result.concat(start);
					start = start+interval;
			}
			return result;
	}

/*
TrialType is for test objects
r_TrialType is for the repeat-detection objects
rep_TrialType is the seeds used for repeated objects
r_repeattrial determines what trial to repeat on
repeatimg are the IDs for the repeated images
r_study are the presented objects that will be tested
colors is for CIE LAB RGB conversions
*/
